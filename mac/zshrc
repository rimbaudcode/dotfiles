#!/usr/local/bin/zsh
#
# name:          zshrc
# version:       see VERSION.md
# synopsis:      configuration file for zsh on `macOS`
# license:       BSD3
# license-file:  LICENSE.md
# author:        art rimbaud
# maintainer:    rimbaudcode[at]gmail(DoT)com
# copyright:     (c) 2016 rimbaudcode
# category:      System

export ZSH=~/.oh-my-zsh

ZSH_THEME="robbyrussell"

HYPHEN_INSENSITIVE="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"

# brew manages zsh plugin by itself
#
plugins=(colored-man-pages git-flow osx stack)

source $ZSH/oh-my-zsh.sh
export LANG=en_US.UTF-8

fpath=(/usr/local/share/zsh-completions $fpath)

HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=0

### Export paths
#
local EMACS_CLIENT_PATH=`which emacsclient`
export ALTERNATE_EDITOR=""
export EDITOR="$EMACS_CLIENT_PATH -t"
export VISUAL="$EMACS_CLIENT_PATH -c -a emacs"
#
# brew install `lesspipe`
local LESSOPEN="|lesspipe.sh %s"
export LESSOPEN
#
local HASKELL_STACK_PATH=$HOME/.local/bin
export PATH=$HASKELL_STACK_PATH:$PATH
#
local RBENV_GEMS_PATH=$HOME/.rbenv/bin:$HOME/.rbenv/shims
export PATH=$RBENV_GEMS_PATH:$PATH
#
local HASKELL_STACK_PATH=$HOME/.local/bin
export PATH=$HASKELL_STACK_PATH:$PATH
#
local HOMEBREW_PATH=/usr/local/bin:/usr/local/sbin
export PATH=$HOMEBREW_PATH:$PATH
export HOMEBREW_GITHUB_API_TOKEN="d4249153d8dd3f9a19a3a10dc370b44fda51a9ab"
export HOMEBREW_NO_ANALYTICS=1
#
local MAC_TEX_LIVE_PATH=/usr/texbin
export PATH=$MAC_TEX_LIVE_PATH:$PATH
#
local MY_APPS_PATH=$HOME/Documents/OneDrive/Apps
export PATH=$MY_APPS_PATH:$PATH
export PATH=$MY_APPS_PATH/bin:$PATH
#
local RBENV_GEMS_PATH=$HOME/.rbenv/bin:$HOME/.rbenv/shims
export PATH=$RBENV_GEMS_PATH:$PATH
source /usr/local/opt/chruby/share/chruby/chruby.sh
#
local SCRIPTS_PATH=$HOME/github/scripts
export PATH=$SCRIPTS_PATH:$PATH

### Not Export Paths
#
local SHARED_DIR_PATH=/Users/Shared
local WORKSPACE_PATH=$HOME/github

### Functions
#
# function cow-speaks
# `cow speaks` a message with lolcat
function cow-speaks () {
  local thought=$1
  cowthink -W80 "$thought" | lolcat
  say-english "$thought"
}
#
# function dependencies
# prints out a png of the current Haskell project dependencies
function dependencies () {
  local png_name=$(basename `pwd`)
  stack dot --no-include-base --external --depth 1 | dot -Tpng -o "$png_name"_dep.png
}
#
# function dictionary
# search a word in the dictionary
function dictionary () {
  local word=$1
  dict "$word" | less
}
#
# function extract
# extract the contents of various compressed files
function extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)  tar xjf $1      ;;
      *.tar.gz)   tar xzf $1      ;;
      *.bz2)      bunzip2 $1      ;;
      *.rar)      rar x $1        ;;
      *.gz)       gunzip $1       ;;
      *.tar)      tar xf $1       ;;
      *.tbz2)     tar xjf $1      ;;
      *.tgz)      tar xzf $1      ;;
      *.zip)      unzip $1        ;;
      *.Z)        uncompress $1   ;;
      *)          echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
      echo "'$1' is not a valid file"
  fi
}
#
# function fixpermissions
# fix file and dir permissions in pwd!
function fixpermissions() {
  find . -type d -exec chmod 755 {} \;
  find . -type f -exec chmod 644 {} \;
  #xattr -rc .
}
#
# function image
# display image on console
function image() {
  local size=$1
  local filename=$2
  imgcat -w $1 $2
}
#
# function lc
# `less` for source code
function lc () {
  local file=$1
  src-hilite-lesspipe.sh $file | less
}
# function man2pdf
# print man pages as pdf
function man2pdf()
{
  local filename=$1
  man -t "$filename" | ps2pdf -> "$filename".pdf
}
#
# function mkcd
# mkdir and cd
function mkcd () {
  mkdir -p $1 && cd "$_"
}
#
# function mkdata
# symlink to data
function mkdata () {
  ln -s $HOME/github/data `pwd`/
}
#
# function pdfmerge
# merge pdfs
function pdfmerge () {
  local merged=$1
  local tomerge=$2
  gs -o $merged -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress $tomerge
}
#
# function sandbox
# creates a sandbox in the system's temp folder
function sandbox () {
  cd $TMPDIR
  mkdir -p sandbox
  cd sandbox
}
#
# function search
# search for files given a pattern
function search () {
  local word=$1
  find ./ -iname "$word" | more
}
#
# function seek-and-destroy
# search for files given a pattern and remove them
# $ files . '.DS_Store'
function seek-and-destroy () {
  local dir=$1
  local pattern=$2
  find $dir -iname $pattern  -exec rm -ir {} \;
}
#
# function starwars
# watch starwars in ASCII
function starwars () {
  echo 'exit: CTRL + ] > CTRL + d'
  sleep 3
  telnet towel.blinkenlights.nl
}
#
# function vlc
# open multimedia in VLC
function vlc () {
  /Applications/VLC.app/Contents/MacOS/VLC --no-video-deco --fullscreen "$1" 2> /dev/null
}
#
# function vscan
# scan a dir or file for virus
function vscan () {
  local filename=$1
  freshclam
  clamscan -r -z "$filename"
}
#
# function web
# web browse with w3m
function web () {
  local site=$1
  w3m -N -no-cookie "$1"
  command rm -f ~/.w3m/history
}
#
# function webarchive
# webarchive webpages
function webarchive () {
  local url=$1
  local filename=$(basename "$1")
  local fname="${filename%.*}"."webarchive"
  webarchiver -url $1 -output $fname
}

### Bindings
# '\e' stands for meta: ESC or Alt
#
bindkey -s '\e1' "!:0 "
bindkey -s '\e2' "!:0-1 "
bindkey -s '\e3' "!:0-2 "
bindkey -s '\e4' "!:0-3 "

### Aliases
#
# 'dangerous' commands made interactive
alias cp='cp -i'
alias ln='ln -i'
alias mv='mv -i'
alias rm='rm -i'
#
alias ascii-list='man 7 ascii'
alias cal='cal | grep --color -EC6 "\b"$(date +%e | sed "s/ //g")'
alias clamscan='clamscan --quiet -rz'
alias cmus='media && cmus'
alias compress='compress -v'
alias eject='hdiutil detach'
alias encrypt='gpg -e -r Art'
alias ghci='ghci -W'
alias imgls='imgls -size 25,25'
alias irb='irb --readline --simple-prompt'
alias ll='less .'
alias lynx='lynx -anonymous -cookies -use_mouse -scrollbar -show_cursor'
alias mkdir='mkdir -p'
alias mybash='bash -l'
alias nemesis='stack runhaskell Nemesis 2> /dev/null'
alias oldies='mplayer http://80.237.154.83:8120'
alias pdf2txt='pdftotext -enc UTF-8 -layout'
alias py='python3 -tt -O -q -b -d'
alias radio='mplayer'
alias rbprof='ruby -w -r profile'
alias reload='source ~/.zshrc'
alias safari='open /Applications/Safari.app'
alias soffice='/Applications/LibreOffice.app/Contents/MacOS/soffice'
alias sq3='sqlite3'
alias topdf='soffice --headless --convert-to pdf'
alias tree='tree -C'
alias unzip='unzip -qq'
alias w3m='w3m -N -no-cookie'
alias wget='wget -c'
alias wolfram='/Applications/Mathematica.app/Contents/MacOS/WolframKernel'
alias zip='zip -qrT'
#
### Folders
#
alias apps="cd $HOME/Documents/OneDrive/Apps/bin"
alias data="cd $HOME/github/data"
alias desktop="cd $HOME/Desktop"
alias documents="cd $HOME/Documents"
alias downloads="cd $HOME/Downloads"
alias github="cd $HOME/github"
alias media="cd $HOME/Music/iTunes/iTunes\ Media"
alias movies="cd $HOME/Movies"
alias pictures="cd $HOME/Pictures"
alias shared="cd $SHARED_DIR_PATH"
alias workspace="cd $WORKSPACE_PATH"
alias thesis="cd ~/Documents/Google\ Drive/work/auv/thesis/thesis"
#
### Sub-menus
#
# brew
alias brew-update='brew update && brew upgrade && brew cleanup && brew prune && brew doctor'
#
# cleaners
alias remove-ds-store='find . -name .DS_Store -delete'
alias remove-emacs-byte-compiled-mods="cd ~/.emacs.d ; find . -name '*.elc' | xargs rm"
#
# date
alias date-utc='gdate -u --iso-8601=ns'
alias date-local='gdate --iso-8601=ns'
#
# emacs
alias e='emacsclient -t'
alias emacs-daemon='emacs --daemon'
alias emacs-gui='emacsclient -c'
alias emacs-kill="emacsclient -e '(kill-emacs)'"
alias emacs-reload='emacs-kill && emacs-daemon'
alias emacs-terminal='emacsclient -t'
#
alias emacs-haskell='emacsclient -t *.org *.cabal **/*.hs *.md'
alias emacs-swift='emacsclient -t *.org **/*.swift *.md'
alias emacs-latex='emacsclient -t TODO.org **/*.tex'
#
# folders
alias latex-docs='cd ~/Documents/Google\ Drive/latex'
alias rmbd-emacs-repo='cd ~/github/dotfiles/emacs.d/rmbd'
#
# get-gitignores
alias get-haskell-gitignore='wget https://raw.githubusercontent.com/github/gitignore/master/Haskell.gitignore -O .gitignore'
alias get-swift-gitignore='wget https://raw.githubusercontent.com/github/gitignore/master/Swift.gitignore -O .gitignore'
#
# hoogle
alias hoogle='hoogle --color --count=100'
alias hoogle-info='hoogle --info'
#
# mail
alias mail-gmail='open https://studmail.unileoben.ac.at'
alias mail-hotmail='open https://studmail.unileoben.ac.at'
alias mail-uni='open https://studmail.unileoben.ac.at'
#
# readers
alias say-english='say -v Samantha'
alias say-german='say -v Anna'
alias say-spanish='say -v Paulina'
#
# web links
alias web-duck='web www.duckduckgo.com'
alias web-facebook='open https://www.facebook.com'
alias web-google='open https://www.google.com'
alias web-mul='open http://www.unileoben.ac.at'
alias web-muonline='open https://online.unileoben.ac.at/mu_online/webnav.ini'
alias web-wolfram='open http://www.wolframalpha.com'
alias web-youtube='open https://www.youtube.com'
#
# youtube-dl
alias yt-audio='youtube-dl -citk -f m4a'
alias yt-video='youtube-dl -citk -f mp4'

### Suffix aliases
#
alias -s pdf='open'
alias -s sublime-project='sublime --project'
alias -s xcodeproj='open'

### Fish syntax highlightning
#
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
